If you see anything here that isn't already assigned to someone, feel free to jump in and just do it!

[[TableOfContents]]

= for Sycamore release =

== urgent small items ==
 * Fix the file attachments in IE so that they NEVER EVER EVER show up as {{{C__My_Documents_crap.jpeg}}}
 * make sure that in Settings they CANNOT make an account while logged in!  that messes everything up!
 * logout button doesn't work when there's anything in the query string

== larger projects ==
=== refactor the parser ===
The parser is huge and ugly right now.  If you want to do some lightweight parsing of, say, a single string then you're in a world of pain.  Also, sometimes you want to use a subset of the parser.  text_html.py parser is derived from a base parser, but text_html is itself too complicated a parser.  There ought to be a layer in-between so we can plug and play with subsets of our markup for use in macros, actions, etc.

 * Assigned to: ??? you?

=== move to a DBMS ===
Begin the move to a db backend (mySQL using InnoDB).  We're already hacking our way around this, and it's just going to get messier the more we go along.  Total integration will come soon.

 * Assigned to: ["PhilipNeustrom"]
 * See ["DB Design"]

||<width="370" bgcolor="#99CCFF" align="center">Amount completed ||<bgcolor="#dddddd" width="30">||

=== super easy stuff ===
--XFix thumbnail macro so that it converts PNG/GIFs to the right thing before scaling them, scales them, then converts them back to indexedX--
  We can consider this one done, although the file size for the resized images is still kind of large.  PIL is bad at compressing images.

  I know I've done almost no work lately, but I had a suggestion for a while and I've wanted to put it down so I don't forget again.  I [[heart]] the Wanted Pages interface, but the top wanted pages are usually the result of people without user pages leaving tons of comments.  Would it make it more useful if the usernames were purged from the list before the sizes are normalized?
    I agree that this would be better, but what's a ''user'', anyway?  Maybe just put everyone on {{{People}}}?
      Everyone in {{PUser Statistics}}} because people in {{{People}}} already have pages typically.
        Sounds good!

Anything from [http://daviswiki.org/Bug_reports].

=== All-in-one imaging ===
Throw together {{{attachment:}}}, {{{borderless:}}} and {{{[[Thumbnail]]}}} into a simple, easy to use, {{{[[Image]]}}}.
  * Assigned to: ???

See ["New image macro"].

=== Case insensitive macros ===
Macros, like anything else, shouldn't depend upon casing.  That's just nerdy.

=== A better, stronger map ===
See ["Wiki Map 2"]

=== Events board edits ===
Events board should allow you to edit the individual events.

''It should have start and end event times, cost of event, who can go (students only, public, etc.), be editable/revertable like other pages, and past events should be viewable too.''
=== Image system ===
'Images' button should lead to a nice little area with image thumbnails displayed for all the images.  The thumbnailed version of each image should sort of it under the normal image, marked a bit differently.

Images should be integrated with the DB to allow for versioning as well as author information.  This information would be available in the Images area.

''My goal for the db-wiki rollout is to have a nicer images area with image versioning as well.  Just so that if someone presses 'delete' the image is still there (just in another table) and easily restorable via a 'revert.''

==== some photos ====
''Here's the current image interface''

[[Thumbnail(pict1.jpg)]] [[Thumbnail(pict2.jpg)]] [[Thumbnail(pict3.jpg)]] [[Thumbnail(pict4.jpg)]]


==== suggestions ====
How about a batch uploader... I cheated by FTP'ing all 20 images I wanted to add to the right page attachment directory, but for the regular users, adding one image at a time is a pain. ["TonyZuccarino"]

I have a problem where I want to batch upload a bunch of photos but be able to reference them in different pages, later, as I decide to. Be nice if there was a general image upload destination that you had to opt for, and default went into pages/attachments. And when I did {{{[[Thumbnail(image.jpeg)]]}}} I could give it like this instead {{{[[Thumbnail(general:image.jpeg)]]}}} if it is coming out of the General area. Hopefully I wouild also be able to browse/view thumbnails of that General area, from the popup. I am going to get a Python guy to add this to ourbv.com to see how it feels... consider it a test of the feature for dwiki.
 * I think a better idea would to do something like {{{[[Image(Another Page:image.jpg)]]}}} to import graphics already stored on another page. --["BrentLaabs"]
  * I agree.  The direction we are heading is that images are aspects of pages they are on, rather than things in themselves.  A page has images, and images are not pages.  You could solve your problem by creating a master-page for each set of similar pictures.  Say, "Photos from the 2005 run."  Then you could do {{{[[Image("Photos from the 2005 run":run1.jpg)]]}}} (or however it is implemented)

=== super-easy install process ===
This goes without saying.  We just need some scripts that set up the MySQL tables for an empty wiki and sets up the auxilary applications.  Perhaps we should get rid of as many of the auxilary search applications as possible by integrating the Xapian stuff within Python (I had little success with this before, but if anyone wants to try and take a stab please do!)

==== things it should do ====
 * ask the user a series of questions which they answer and it creates a localwiki_config.py file for them.
   * questions to ask:
     * all of the important localwiki_config.py items
     * the domain of their MySQL database ("Usually 'localhost'")
     * Two options:  Either create a new user ('wiki') or use an existing user.  Password in localwiki_config.py will be kept in plaintext and may not be secure.  Suggest creating a new user.
      * existing:
       * the user they'd like to use on the database
       * the user's password for the database
      * create new:
       * name of the user ('wiki' suggested)
       * password for the user
 * create the database tables
  * populate the tables with the basic 'system' pages.
 * set up add_to_index, remove_from_index with the proper paths
 * set up edit.js so that the lines {{{addButton('/buttons/bold.png','Bold text','\'\'\'','\'\'\'','Bold text'); }}} are like {{{addButton('config.web_dir/buttons/bold.png','Bold text','\'\'\'','\'\'\'','Bold text'); }}}

==== docs ====
Tell them that if they want to hack the theme code ({{{theme/eggheadbeta.py}}}, etc), and they change the background color of the top region to something aside from blue then the icons will look ugly.  This is because of technical limitations with PNG transparency across browsers.  Supply the raw alpha-channeled PNG files and tell them how to make it work using these for their given background.

=== every page has an rss feed ===
the feed is its own little recent changes.  this is easy and possible w/db.

=== better looking info page ===
Somehow, the Info tab area needs to look better and be more intuitive, but also not break with the look and feel of the rest of the wiki.

Info page should also include page deletions in the history and capture the comment. Same with attaching a comment to the revert event.
 ''I undeleted a page and added a comment to it, but the history doesn't make sense and no one can follow it to see who deleted it.''
 (Just so it's not forgotten):  Latest code logs deletes/reasons, but the diff/viewing of the page doesn't look right.  Needs to just give them the "this page doesn't exist" business.


=== Talk pages ===
Davis Wiki doesn't use them, but Roc Wiki does.  Let's include a config option to turn on an interface for talk pages.  I think that [http://rocwiki.org rocwiki.org]'s talk page ui might need some tweaking.  I'm not sure where the right place for the talk link really would be.  It's a 'real' page, so it shouldn't be a yellow tab.

 * My preference would be to group the edit, info, and 'talk' tabs at the right end of the tab set, so that they're grouped with the page-title tab.  I also have to wonder why the page-title tab disappears when you click on edit or info -- I would prefer that it still be there. - ["ErikAnderson"]
   * I think you're right about the page tab staying down during an edit or info tab press.  As for the Edit/Info links being to the far left aside from next to the associated page tabs, I think it's an issue of prominance.  If we can make them look good next to the page-specific tab then I think we should do it.  As for the "Talk" tab being one of the yellow tabs, the issue I have with that the "Talk" page is just like any other page, in terms of how the user uses it and the software thinks of it.  This is true at least with Wikipedia (and I think it should be true..).  So you end up with some confusion when pressing "Talk" because you stop knowing what the Edit and Info tabs refer to.  I think it's probably okay, though.  I've gotten confused about this while using wikipedia several times before.

   Having the edit/info tabs close to the page seems to mean we'd have to live with either:  1) Seeing "edit/info" in a difference place, depending on whether you go to a page that's a preset tab or a page that's not a preset tab.  2) Having the page tab, no matter what page you're looking at, shift to the far left (where "Front Page" is).  This means consistant placement of "Edit/Info/Talk" but a possibly confusing shifting of tabs? -- The confusing shifting happening when a user clicks on, say, "Recent Changes" and it shifts to the far left?

     * Aha, I see your points.  How about losing the yellow tabs altogether and doing something "Roc-like," pictured below. - ["ErikAnderson" E]

     attachment:1.gif

     attachment:2.gif

      I can see why it may be good to move the 'info' and 'edit' buttons lower than the tabs, but having a long string of text buttons looks cludgy.  You possibly have {{{[View Map] [Talk] [Edit] [Info]}}} with {{{(Redirected from ...)}}} below.  My thoughts are we should do one of the following:
       * Make some small icons for each type of thing.  It would somewhat alleviate the problem of a cluttered title banner, and carefully chosen icons can communicate everything we need very concisely.
       * Keep 'edit' and 'info' separate from the other buttons because they are special for the reason that every page has info and can be edited, whereas most pages do not have talk pages or map points associated with them.  We can convert 'edit' and 'info' into small icons, as well, and maybe even squeeze those icons inside the active tab, to the right of the page name.
       * Concentrate on placing the 'edit' button in a nice place and move the 'info' button to the footer or elsewhere on the page, since presumably it is used far less often than the other buttons.  Also, I would favor renaming it to "history" or something of that sort.  Regarding the placement of the 'edit' button, we can use one of the above options.
         * ''I think it should stay "Info."  Certainly not "History" as there is going to be the whole images area there, in addition to the general information area.''
          I see what you're saying, that "History" isn't accurate, and I realize that.  But I think "Info" is super vague and gives no hint to the novice user why they should ever click on it.  "Revision History" is the most important purpose of the info page, and "Images" can be accessed through the edit interface (And right now I'd rather do that in 2 clicks rather than going through info).  The character count, number of attachments, and outgoing links are really kind of extraneous.  I'm not insisting we change it from "info" but I think it's something to consider, as other wikis make the revisions link more obvious.
             I realize it's vague.  Having to go into "edit" to see the image information seems bad.  I just don't want a ton of links everywhere about a given page the way wikipedia does.  "What links here.." etc should be all stashed away in an "I care" page like "Info"?  Or is it better to have links on a page that most users don't click?  I think the problem is we have mainly horizontal space to place items in, rather than wikipedia's side-stash area.  I think our layout is better because it's less technical looking.
                 I sympathize with Philip -- 'history' is more conventional than 'info,' just as 'discuss' is more so than 'talk.'  On the other hand, 'info' & 'talk' are nice compact four-letter words that balance with 'edit,' and this bodes well for rending all three as icons (new heading below!)

=== Icons ===
[[Thumbnail(icons_all.jpg, "A page with all the possible icons.")]]  [[Thumbnail(icons_normal.jpg, "A page with the minimal number of icons (Davis Wiki will look like this for most pages, at first).")]]

''I'm not really satisfied with how these look.  It just doesn't look 'right' to me.  Any input would be appreciated.  The html is [http://daviswiki.org/cool_files/icon_html.tar.gz here].''

I would just say that looking 'right' depends on what you're used to.  I think its a step up from the 'mini tabs.' - ["ErikAnderson" E]
  ''After looking at it from several different computers, and having gotten a bit used to it, I really like them!  My home system doesn't have any fonts and I've got a really shoddy monitor set up.  Looks great on everything else, though.  If you want to check out the way they work right now, check [http://63.204.73.247/installhtml/index.cgi my home machine] (not liable to always be up!).''
=== Bumping ===

The ability to bump a page into the recent changes without making an edit to it yourself. Useful for promoting discussion.

''Recent changes is a list of the page changes, so this wouldn't really fall into that class.  Maybe if there was another interface for active pages this sort of an idea could be integrated.''

=== NoSpam Macro ===

The current {{{[[MailTo(joe AT schmo DOT co)]]}}} macro works whether or not the user writes the address as here, or as {{{[[MailTo(joe@schmo.co)]]}}}.  Use of the latter format should alert the user that they're not actually hiding their address from anyone--the main purpose of the macro itself.

  ''As mentioned [http://daviswiki.org/Wiki_Community/Technical_Discussion here], we should just convert all {{{person@site.com}}} addresses to some random-esque displayed versions, and when the person's logged in they can see them in their normal state.''

=== Printing ===
print.css needs to be cleaned up so that it doesn't show a logo or any headers.  Just show the page text/images with a small footer saying the content, unless noted otherwise, is avail. under a cc license...

=== Recent Changes Page ===

Add a flagged users page. Then color the username link of editors based on the following:
 * flagged user = red
 * newly registered user (within 48 hours) = yellow
 * if we knew how to identify trolls (if their edit consists of a series of offsite links?) = dark green

This would make it easier for editors to spot new users to welcome and assist, and those who aren't up to banning, but who's edits require a little more attention/scrutiny.

----
''New user indication is good, but a 'flagged' user is just as well as banned if their contributions all show up in red or something such.  How about:  When you visit the page for a user and click "Info," you are told their ["User Statistics"] as well as having a link to all the edits they've made..''

=== Minor ===
The footer should note "You may attribute to <site name>."

"<< previous edit" ">> next edit" on info page

== Non-development related ==
=== Documentation ===
We need a set of good pages for a basic install and have them kept up.  We need a set of pages about admining the wiki itself (ACLs).

=== Interface ===
We need a graphics person to look at things and give some input, maybe.

= Post-Sycamore ideas =
 * WYSIWYG editor based on something like FCKeditor but much simpler looking
 * ACL system needs to be removed from page text ?
