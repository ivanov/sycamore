#!/usr/bin/python -OO
# -*- coding: iso-8859-1 -*-
"""
    Sycamore - Standalone HTTP server

    @copyright: 2006 Philip Neustrom
    @license: GNU GPL, see COPYING for details.
"""

import sys, time, mimetypes, os
__directory__ = os.path.dirname(__file__)
sys.path.extend([os.path.abspath(os.path.join(__directory__, '..', '..'))]),
handle_static_files = False

from Sycamore.support.wsgi_server import httpserver
#from Sycamore.support.wsgi_server import swap 
from Sycamore.request import RequestWSGI
from Sycamore import config
import profile, time, getopt

def usage():
   print "usage: index.scgi [-d]"
   print "\n  d : run as daemon."

def run_as_daemon():
  pid = os.fork()
  if pid == 0:
    os.setsid()
    pid = os.fork()
    if pid == 0:
      do_run()

def do_run():
    httpserver.serve(handle_request, host=config.httpd_host, port=config.httpd_port)

def handle_request(env, start_response):
  if handle_static_files:
    static_files_path = '%s/wiki' % config.web_dir

  # because this is standalone we need to deal with the case of serving static files..  
  if handle_static_files and (env['PATH_INFO'].startswith(static_files_path) or env['PATH_INFO'] == ('%s/favicon.ico' % config.web_dir)):
    file_path = config.web_root + env['PATH_INFO']
    static_file = open(file_path, 'r')
    mimetype = mimetypes.guess_type(file_path)[0]
    modified_time_unix = os.path.getmtime(file_path)
    datestring = time.strftime('%a, %d %b %Y %H:%M:%S', time.gmtime(modified_time_unix)) + ' GMT'
    start_response('200 OK', [("Content-Type", mimetype), ("Last-Modified", datestring)])
    return static_file
  else:
    request = RequestWSGI(env, start_response)
    return request.run()
    
if __name__ == '__main__':
    try:
      opts, args = getopt.getopt(sys.argv[1:], "d", ["-d"])
      if opts:
        for o, a in opts:
          if o == '-d':
  	    run_as_daemon()
  	  else:
  	    do_run()
      else:
        do_run()

    except getopt.GetoptError:
      usage()
      sys.exit(2)
